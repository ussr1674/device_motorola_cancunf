on early-init
    # boot perf. tune
    write /sys/devices/system/cpu/cpufreq/policy0/scaling_min_freq 2000000
    write /sys/devices/system/cpu/cpufreq/policy6/scaling_min_freq 2200000
    write /sys/class/devfreq/mtk-dvfsrc-devfreq/userspace/set_freq 5500000000

on charger
    write /sys/devices/system/cpu/cpufreq/policy0/scaling_min_freq 0
    write /sys/devices/system/cpu/cpufreq/policy6/scaling_min_freq 0
    write /sys/class/devfreq/mtk-dvfsrc-devfreq/userspace/set_freq 0

    # Keep one LITTLE and one big
    write /sys/devices/system/cpu/cpu1/online 0
    write /sys/devices/system/cpu/cpu2/online 0
    write /sys/devices/system/cpu/cpu3/online 0
    write /sys/devices/system/cpu/cpu4/online 0
    write /sys/devices/system/cpu/cpu5/online 0
    write /sys/devices/system/cpu/cpu7/online 0

on property:vendor.all.modules.ready=1
    write /sys/devices/system/cpu/cpufreq/policy0/scaling_governor "schedutil"
    write /sys/devices/system/cpu/cpufreq/policy0/schedutil/up_rate_limit_us 500
    write /sys/devices/system/cpu/cpufreq/policy0/schedutil/down_rate_limit_us 1000

    write /sys/devices/system/cpu/cpufreq/policy6/scaling_governor "schedutil"
    write /sys/devices/system/cpu/cpufreq/policy6/schedutil/up_rate_limit_us 500
    write /sys/devices/system/cpu/cpufreq/policy6/schedutil/down_rate_limit_us 1000

on init
    # Set PELT multiplier to 2, which is equivalent to a 16ms half-life.
    write /proc/sys/kernel/sched_pelt_multiplier 2

    write /sys/devices/platform/soc/112b0000.ufshci/clkgate_enable 0
    write /proc/sys/kernel/sched_util_clamp_min_rt_default 0

    # Boot time FS tuning
    write /sys/block/mmcblk0/queue/iostats 0
    write /sys/block/mmcblk0/queue/nr_requests 256
    write /sys/block/sdc/queue/iostats 0
    write /sys/block/sdc/queue/nr_requests 256

    # update cpus for cpuset cgroup
    write /dev/cpuset/foreground/cpus 0-7
    write /dev/cpuset/background/cpus 0-3
    write /dev/cpuset/system-background/cpus 0-3
    write /dev/cpuset/top-app/cpus 0-7
    write /dev/cpuset/camera-daemon/cpus 0-7

    # ZRAM Setup
    write /sys/block/zram0/comp_algorithm lz4
    write /proc/sys/vm/page-cluster 0

    # memory reserve tuning
    write /proc/sys/vm/watermark_boost_factor 0
    write /proc/sys/vm/min_free_kbytes 27386
    write /proc/sys/vm/lowmem_reserve_ratio "0 0 0"

    # disable khugepaged
    write /sys/kernel/mm/transparent_hugepage/enabled "never"

on boot
    # boot perf. tune
    write /dev/cpuctl/system-background/cpu.uclamp.min 100
    write /dev/cpuctl/system-background/cpu.uclamp.latency_sensitive 1
    write /dev/cpuctl/foreground/cpu.uclamp.min 100
    write /dev/cpuctl/foreground/cpu.uclamp.latency_sensitive 1
    write /dev/cpuctl/top-app/cpu.uclamp.min 100
    write /dev/cpuctl/top-app/cpu.uclamp.latency_sensitive 1
    write /dev/cpuctl/background/cpu.uclamp.min 100
    write /dev/cpuctl/background/cpu.uclamp.latency_sensitive 1

    # Thermal tunning
    write /sys/kernel/thermal/min_throttle_freq "MIN_FREQ -1 -1 -1 -1"
    write /sys/kernel/thermal/min_ttj "MIN_TTJ 85000"
    write /sys/kernel/thermal/target_tpcb 80000
    write /sys/kernel/thermal/ttj "TTJ 85000 85000 85000"

on property:sys.boot_completed=1
    # Enable ZRAM on boot_complete
    swapon_all /vendor/etc/fstab.mt6855
    write /proc/sys/vm/swappiness 60
    
    write /sys/devices/platform/soc/112b0000.ufshci/clkgate_enable 1
    write /proc/sys/kernel/sched_migration_cost_ns 200000

    # Runtime FS tuning
    # we should adjust the setting upon boot_complete for runtime performance
    write /sys/block/mmcblk0/queue/iostats 1
    write /sys/block/mmcblk0/queue/nr_requests 128
    write /sys/block/sdc/queue/iostats 1
    write /sys/block/sdc/queue/nr_requests 128

    # restore boot perf. tune
    write /sys/devices/system/cpu/cpufreq/policy0/scaling_min_freq 0
    write /sys/devices/system/cpu/cpufreq/policy6/scaling_min_freq 0
    write /sys/class/devfreq/mtk-dvfsrc-devfreq/userspace/set_freq 0

    # Configure clamps for standard task groups.
    # system-background
    # cap the max utilisation for system-background tasks to save power.
    write /dev/cpuctl/system-background/cpu.uclamp.max 40
    write /dev/cpuctl/system-background/cpu.uclamp.min 0
    write /dev/cpuctl/system-background/cpu.uclamp.latency_sensitive 0

    # foreground
    write /dev/cpuctl/foreground/cpu.uclamp.max max
    write /dev/cpuctl/foreground/cpu.uclamp.min 10
    write /dev/cpuctl/foreground/cpu.uclamp.latency_sensitive 0

    # top-app
    write /dev/cpuctl/top-app/cpu.uclamp.max max
    write /dev/cpuctl/top-app/cpu.uclamp.min 10
    write /dev/cpuctl/top-app/cpu.uclamp.latency_sensitive 1

    # background
    # cap the max utilisation for background tasks to save power.
    write /dev/cpuctl/background/cpu.uclamp.max 50
    write /dev/cpuctl/background/cpu.uclamp.min 0
    write /dev/cpuctl/background/cpu.uclamp.latency_sensitive 0

    # nnapi-hal
    write /dev/cpuctl/nnapi-hal/cpu.uclamp.max max
    write /dev/cpuctl/nnapi-hal/cpu.uclamp.min 75
    write /dev/cpuctl/nnapi-hal/cpu.uclamp.latency_sensitive 1

    # camera-daemon
    write /dev/cpuctl/camera-daemon/cpu.uclamp.max max
    write /dev/cpuctl/camera-daemon/cpu.uclamp.min 50
    write /dev/cpuctl/camera-daemon/cpu.uclamp.latency_sensitive 1

    # Uclamp tuning
    write /proc/sys/kernel/sched_util_clamp_min_rt_default 96
    write /proc/sys/kernel/sched_util_clamp_min 128

    # Enable PowerHAL hint processing
    setprop vendor.powerhal.init 1

service vendor.gralloc-4-0 /vendor/bin/hw/android.hardware.graphics.allocator@4.0-service-mediatek
    class hal animation
    interface android.hardware.graphics.allocator@4.0::IAllocator default
    user system
    group graphics drmrpc
    capabilities SYS_NICE
    onrestart restart surfaceflinger
    task_profiles ProcessCapacityHigh HighPerformance
    override

service vendor.hwcomposer-2-3 /vendor/bin/hw/android.hardware.graphics.composer@2.3-service
    class hal animation
    user system
    group graphics drmrpc
    capabilities SYS_NICE
    onrestart restart surfaceflinger
    task_profiles ProcessCapacityHigh HighPerformance
    override
